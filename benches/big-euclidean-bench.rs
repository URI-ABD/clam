use criterion::{criterion_group, criterion_main, Criterion};
extern crate distances;
use distances::numeric::euclidean;
use distances::string::levenshtein;

fn big_euclidean(c: &mut Criterion) {
        let n = 1_000_000;
        let x: Vec<f64> = vec![0.2; n];
        let y: Vec<f64> = vec![0.3; n];
        c.bench_function("Big Euclidean", |b| b.iter(|| euclidean(&x, &y)));
}

fn big_levenshtein(c: &mut Criterion) {
        let x = "abracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabraabracadabra";
        let y = "abracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrbabracadabraabracadabraabracadabrb";
        c.bench_function("Big Levenshtein", |b| b.iter(|| levenshtein(&x,&y)));
}


criterion_group!(benches, big_euclidean, big_levenshtein);
criterion_main!(benches);